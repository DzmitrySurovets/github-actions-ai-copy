#add your code here. test
name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Build Docker image
      run: docker build -t dsurovets-python-flask-app -f app.dockerfile .
    # Step 4: Scan Docker image with Trivy
    - name: Scan Docker image for vulnerabilities
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: dsurovets-python-flask-app
        format: table
        ignore-unfixed: true

  performance-test:
    name: Performance Test
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download Docker image artifact
        uses: actions/download-artifact@v4
        with:
          name: myapp
          path: .

      - name: Load Docker image
        run: |
          gunzip -c myapp.tar.gz | docker load

      - name: Run Application Container
        run: |
          docker run --name app_container -d -p 8080:8080 myapp:${{ github.sha }}

      - name: Wait for Application to be Ready
        run: |
          for i in {1..30}; do
            if curl -s "http://localhost:8080" > /dev/null; then
              echo "Application is ready!"
              exit 0
            fi
            echo "Waiting for application to be ready..."
            sleep 2
          done
          echo "Application did not start in time!"
          exit 1

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Run performance tests
        uses: ./.github/actions/performance-test

      - name: Clean Up
        if: always()
        run: |
          docker stop app_container
          docker rm app_container